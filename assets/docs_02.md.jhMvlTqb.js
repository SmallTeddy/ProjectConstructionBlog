import{_ as s,c as a,o as i,U as e}from"./chunks/framework.TCYKikdX.js";const t="/assets/node-install-01.VLJRtJIH.png",n="/assets/node-install-02.id7bbmLN.png",l="/assets/node-install-03.r0DV7z8r.png",h="/assets/node-install-04.kL07jqva.png",p="/assets/node-install-05.NMGBLPHp.png",o="/assets/node-install-06.iGUAM_6L.png",r="/assets/vscode-install.hcikwsbG.png",d="/assets/expansion-00.5SKewqMv.png",k="/assets/expansion-01.KbhJI-9t.png",c="/assets/expansion-02.1wdiS542.png",g="/assets/expansion-03.v1K_THHU.png",E="/assets/expansion-04.5TTjPspA.png",u="/assets/expansion-05.hfKW0Q6W.png",m="/assets/expansion-06.rUq1uBAF.png",y="/assets/expansion-07.4iHRPsDL.png",b="/assets/expansion-08.OSj18VaB.png",_="/assets/expansion-09.8OU0D40X.png",A="/assets/expansion-10.V399Hu6u.png",H=JSON.parse('{"title":"第二章 环境部署","description":"","frontmatter":{},"headers":[],"relativePath":"docs/02.md","filePath":"docs/02.md","lastUpdated":1704177762000}'),D={name:"docs/02.md"},f=e('<h1 id="第二章-环境部署" tabindex="-1">第二章 环境部署 <a class="header-anchor" href="#第二章-环境部署" aria-label="Permalink to &quot;第二章 环境部署&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>磨刀不误砍柴工，再开发之前，我们需要先搭建好我们开发所需要的环境，安装好插件等，以便我们快速便捷的进行开发。</p><h2 id="一、node环境安装" tabindex="-1">一、Node环境安装 <a class="header-anchor" href="#一、node环境安装" aria-label="Permalink to &quot;一、Node环境安装&quot;">​</a></h2><h3 id="_1、node介绍" tabindex="-1">1、Node介绍 <a class="header-anchor" href="#_1、node介绍" aria-label="Permalink to &quot;1、Node介绍&quot;">​</a></h3><p>Node.js 就是运行在服务端的 JavaScrip，基于 Chrome JavaScript 运行时建立的一个平台，Node.js 是一个事件驱动 I/O 服务端 JavaScript 环境，基于 Google 的 V8 引擎，V8 引擎执行 Javascript 的速度非常快，性能非常好。</p><h3 id="_2、node安装" tabindex="-1">2、Node安装 <a class="header-anchor" href="#_2、node安装" aria-label="Permalink to &quot;2、Node安装&quot;">​</a></h3><p>官网地址：<a href="https://nodejs.org" target="_blank" rel="noreferrer">https://nodejs.org</a></p><p>个人推荐下载 14.16.0 版本 <img src="'+t+'" alt="node-install-01"><img src="'+n+'" alt="node-install-02"><img src="'+l+'" alt="node-install-03"><img src="'+h+'" alt="node-install-04"><img src="'+p+'" alt="node-install-05"></p><p>在这里选择下载的文件类型，推荐直接下载msi文件，下载之后一直点击下一步安装即可。</p><p>安装成功后，可以在本机的terminal中用 <code>node -v</code> 和 <code>npm -v</code> 检查版本。</p><p><img src="'+o+'" alt="node-install-06"></p><h2 id="二、vscode安装" tabindex="-1">二、VsCode安装 <a class="header-anchor" href="#二、vscode安装" aria-label="Permalink to &quot;二、VsCode安装&quot;">​</a></h2><h3 id="_1、vscode介绍" tabindex="-1">1、VsCode介绍 <a class="header-anchor" href="#_1、vscode介绍" aria-label="Permalink to &quot;1、VsCode介绍&quot;">​</a></h3><p>VS Code是这两年非常热门的一款开发工具，它不仅有提升开发体验的界面、轻量化的编辑器，还有丰富而强大的插件，这些优秀的插件使得VS Code生态体系更加吸引人，让开发效率大大提升</p><h3 id="_2、vscode安装" tabindex="-1">2、VsCode安装 <a class="header-anchor" href="#_2、vscode安装" aria-label="Permalink to &quot;2、VsCode安装&quot;">​</a></h3><p>官网地址：<a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">https://code.visualstudio.com/</a></p><p><img src="'+r+'" alt="vscode-install"> 直接下载安装即可。</p><h3 id="_3、vscode插件" tabindex="-1">3、VsCode插件 <a class="header-anchor" href="#_3、vscode插件" aria-label="Permalink to &quot;3、VsCode插件&quot;">​</a></h3><p>vs code之所以强大，是因为有着强大的插件库，这里作者推荐一些常用的插件。</p><p><img src="'+d+'" alt="expansion-00"> 打开vs code，找到左侧的插件图标，搜索插件并下载。</p><h4 id="_1、chinese-simplified-简体中文-language-pack-for-visual-studio-code" tabindex="-1">1、Chinese (Simplified) (简体中文) Language Pack for Visual Studio Code <a class="header-anchor" href="#_1、chinese-simplified-简体中文-language-pack-for-visual-studio-code" aria-label="Permalink to &quot;1、Chinese (Simplified) (简体中文) Language Pack for Visual Studio Code&quot;">​</a></h4><p>适用于 VS Code 的中文（简体）语言包</p><p><img src="'+k+'" alt="expansion-01"></p><h4 id="_2、prettier-code-formatter" tabindex="-1">2、Prettier - Code formatter <a class="header-anchor" href="#_2、prettier-code-formatter" aria-label="Permalink to &quot;2、Prettier - Code formatter&quot;">​</a></h4><p>Prettier是一个固执己见的代码格式化器。它通过解析代码并使用自己的规则(考虑到最大行长度)重新打印代码，并在必要时包装代码，从而实现一致的风格。</p><p><img src="'+c+'" alt="expansion-02"></p><h4 id="_3、auto系列" tabindex="-1">3、Auto系列 <a class="header-anchor" href="#_3、auto系列" aria-label="Permalink to &quot;3、Auto系列&quot;">​</a></h4><p>这类插件可以方便我们在写代码的时候，自动补全标签，自动删除标签，自动引入等功能，可以自己根据需求下载。</p><p><img src="'+g+'" alt="expansion-03"></p><h4 id="_4、vue插件" tabindex="-1">4、vue插件 <a class="header-anchor" href="#_4、vue插件" aria-label="Permalink to &quot;4、vue插件&quot;">​</a></h4><p>安装vue的相关插件，更好的支持vue项目开发。</p><p><img src="'+E+'" alt="expansion-04"></p><h4 id="_5、dracula-official" tabindex="-1">5、Dracula Official <a class="header-anchor" href="#_5、dracula-official" aria-label="Permalink to &quot;5、Dracula Official&quot;">​</a></h4><p>一款代码开发主体，可以根据自己的喜好，搜索theme关键词自行下载个人喜欢的代码风格。</p><p><img src="'+u+'" alt="expansion-05"></p><h4 id="_6、color-highlight" tabindex="-1">6、Color Highlight <a class="header-anchor" href="#_6、color-highlight" aria-label="Permalink to &quot;6、Color Highlight&quot;">​</a></h4><p>一款颜色显示插件，根据需求自行安装。</p><p><img src="'+m+'" alt="expansion-06"></p><h4 id="_7、error-lens" tabindex="-1">7、Error Lens <a class="header-anchor" href="#_7、error-lens" aria-label="Permalink to &quot;7、Error Lens&quot;">​</a></h4><p>将报错提示在vs code中显示，根据需求自行安装。</p><p><img src="'+y+'" alt="expansion-07"></p><h4 id="_8、material-icon-theme" tabindex="-1">8、Material Icon Theme <a class="header-anchor" href="#_8、material-icon-theme" aria-label="Permalink to &quot;8、Material Icon Theme&quot;">​</a></h4><p>vs code图标插件，根据需求自行安装。</p><p><img src="'+b+'" alt="expansion-08"></p><h4 id="_9、git-history" tabindex="-1">9、Git History <a class="header-anchor" href="#_9、git-history" aria-label="Permalink to &quot;9、Git History&quot;">​</a></h4><p>git查看历史插件，根据需求自行安装。</p><p><img src="'+_+'" alt="expansion-09"></p><h4 id="_10、codeium-ai-coding-autocomplete" tabindex="-1">10、Codeium: AI Coding Autocomplete <a class="header-anchor" href="#_10、codeium-ai-coding-autocomplete" aria-label="Permalink to &quot;10、Codeium: AI Coding Autocomplete&quot;">​</a></h4><p>AI智能代码提示生成插件，根据需求自行安装。</p><p><img src="'+A+`" alt="expansion-10"></p><h2 id="三、git安装" tabindex="-1">三、Git安装 <a class="header-anchor" href="#三、git安装" aria-label="Permalink to &quot;三、Git安装&quot;">​</a></h2><h3 id="_1、简介" tabindex="-1">1、简介 <a class="header-anchor" href="#_1、简介" aria-label="Permalink to &quot;1、简介&quot;">​</a></h3><p>Git 是一个免费的开源 分布式版本控制系统，旨在快速高效地处理从小到大的项目。</p><p>Git易于学习，占用 空间小，性能快如闪电。它凭借廉价的本地分支、方便的暂存区域和 多个工作流程等功能，超越了 Subversion、CVS、Perforce 和 ClearCase 等 SCM 工具。</p><h3 id="_2、安装" tabindex="-1">2、安装 <a class="header-anchor" href="#_2、安装" aria-label="Permalink to &quot;2、安装&quot;">​</a></h3><p>官网地址：<a href="https://git-scm.com/" target="_blank" rel="noreferrer">https://git-scm.com/</a></p><p><img src="https://img-blog.csdnimg.cn/82c1bd3deef04907a01901c699f5f481.png" alt="在这里插入图片描述"> 点击下载安装即可，在terminal中用<code>git -v</code>查看版本号。</p><p><img src="https://img-blog.csdnimg.cn/9ac79e517afe4991ad817836f50a81ea.png" alt="在这里插入图片描述"></p><h3 id="_3、git常用命令" tabindex="-1">3、git常用命令 <a class="header-anchor" href="#_3、git常用命令" aria-label="Permalink to &quot;3、git常用命令&quot;">​</a></h3><h4 id="_1、创建库" tabindex="-1">1、创建库 <a class="header-anchor" href="#_1、创建库" aria-label="Permalink to &quot;1、创建库&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git init                          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 项目初始化</span></span></code></pre></div><h4 id="_2、添加和提交到仓库" tabindex="-1">2、添加和提交到仓库 <a class="header-anchor" href="#_2、添加和提交到仓库" aria-label="Permalink to &quot;2、添加和提交到仓库&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git add </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">README</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.txt                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 添加 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git status                        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 提交前查看状态</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git commit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           // 提交</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git status                        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 提交后查看仓库状态</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git diff readme.txt      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 查看文件更改前后的内容变化</span></span></code></pre></div><h4 id="_3、版本回退" tabindex="-1">3、版本回退 <a class="header-anchor" href="#_3、版本回退" aria-label="Permalink to &quot;3、版本回退&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 现在-&gt;过去</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git log                           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 查看历史记录  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git log </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">prettry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">oneline         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 查看历史记录-简易版</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git reset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hard </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HEAD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 回退到上一个版本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git reset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hard </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HEAD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          // 回退到第前10个版本</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 过去-&gt;现在  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git reflog                        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获得所有提交命令的版本号  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git reset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hard </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">commit id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 通过版本号回到现在</span></span></code></pre></div><h4 id="_4、缓存区和暂存区" tabindex="-1">4、缓存区和暂存区 <a class="header-anchor" href="#_4、缓存区和暂存区" aria-label="Permalink to &quot;4、缓存区和暂存区&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git add file1 file2 file3         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 添加到缓存区</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git add .                         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 添加全部修改文件 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git commit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // 一次性提交多个文件</span></span></code></pre></div><h4 id="_5、撤销和删除文件" tabindex="-1">5、撤销和删除文件 <a class="header-anchor" href="#_5、撤销和删除文件" aria-label="Permalink to &quot;5、撤销和删除文件&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 文件内容有误，需要恢复到之前的版本：可以手动更改在commit，也可以回到HEAD^版本，本文介绍第三种方法</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// - version1：没有加入到暂存区  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git status                        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 查看哪个文件被更改了</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git checkout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filename           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 撤销这个文件的更改 </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// - version2: 已经加入到暂存区  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git reset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hard </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HEAD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 先返回到上一版本（暂存区-&gt;工作区）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git checkout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filename           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 撤销这个文件的更改</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rm filename                       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 从工作区删除filename  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git rm filename                   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 从版本库删除filename</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git checkout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> filename          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 恢复删除的filename</span></span></code></pre></div><h4 id="_6、远程仓库" tabindex="-1">6、远程仓库 <a class="header-anchor" href="#_6、远程仓库" aria-label="Permalink to &quot;6、远程仓库&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ssh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keygen </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t rsa –</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">C</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> “youremail@example.com”    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 建立github和本地电脑的SSH Key链接  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 本地-&gt;GitHub</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git remote add origin 地址        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 关联一个GitHub</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">u origin master          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 本地内容推送到GitHub（第一次用）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push origin master             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 以后每次提交用</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// GitHub-&gt;本地</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git clone git地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git pull origin master         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 拉取最新主分支代码</span></span></code></pre></div><h4 id="_7、创建和合并分支" tabindex="-1">7、创建和合并分支 <a class="header-anchor" href="#_7、创建和合并分支" aria-label="Permalink to &quot;7、创建和合并分支&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git checkout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b feature1       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建并切换到feature1分支</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git branch                     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 查看当前所有分支</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git checkout master            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 切换到主分支  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git merge feature1             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 合并master和feature1分支:fast-mode模式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git merge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">no</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ff </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;merge with no-ff&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 合并分支，并且留下信息说明我在这里合并过 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git branch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d feature1         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 删除feature1分支</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 解决合并冲突</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git log </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pretty</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">oneline </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">abbrev</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">commit   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 树状图查看分支情况</span></span></code></pre></div><h3 id="_4、git常见问题解决方案" tabindex="-1">4、git常见问题解决方案 <a class="header-anchor" href="#_4、git常见问题解决方案" aria-label="Permalink to &quot;4、git常见问题解决方案&quot;">​</a></h3><h4 id="_1、代码推送" tabindex="-1">1、代码推送 <a class="header-anchor" href="#_1、代码推送" aria-label="Permalink to &quot;1、代码推送&quot;">​</a></h4><p><code>git clone url</code>拉取代码后，<code>git branch -a</code>处于 <code>master</code> 分支，创建个人本地分支，<code>git checkout -b username</code>， <code>git pull origin master</code>，保证个人本地分支代码与 <code>master</code> 分支代码相同，然后（创建远程分支，将本地个人分支代码与远程分支创建关联并推送到远程分支） <code>git push origin username:username</code> 前面一个远程分支名称可以随便取的。</p><h4 id="_2、代码改蹦" tabindex="-1">2、代码改蹦 <a class="header-anchor" href="#_2、代码改蹦" aria-label="Permalink to &quot;2、代码改蹦&quot;">​</a></h4><p>代码改蹦，对本地代码中修改的部分不做保存，具体： 1、<code>git fetch --all</code> 2、<code>git reset --hard origin/master</code>，这里的 <code>master</code> 可以是远程个人分支的分支名</p><h4 id="_3、commit报错" tabindex="-1">3、commit报错 <a class="header-anchor" href="#_3、commit报错" aria-label="Permalink to &quot;3、commit报错&quot;">​</a></h4><p>当 <code>git commit</code> 的时候报错：<code>husky &gt; pre-commit (node v12.13.0) Stashing changes...</code> 输入 <code>git commit -m ‘xxx’ --no-verify</code> 绕过了 <code>lint</code> 的检查即可</p><h4 id="_4、拉取指定分支代码" tabindex="-1">4、拉取指定分支代码 <a class="header-anchor" href="#_4、拉取指定分支代码" aria-label="Permalink to &quot;4、拉取指定分支代码&quot;">​</a></h4><p>在 <code>master</code> 分支拉取指定远程分支代码 <code>git fetch origin</code> 本地分支名：远程分支名称，然后切换个人分支 <code>git log</code> 即可 或者处在 <code>a</code> 分支，想啦b分支的代码， <code>git checkout b</code><code>git pull origin b</code> 即可</p><h4 id="_5、恢复代码" tabindex="-1">5、恢复代码 <a class="header-anchor" href="#_5、恢复代码" aria-label="Permalink to &quot;5、恢复代码&quot;">​</a></h4><p>在 <code>git status</code> 时候发现有某个文件已经改动（还没有 <code>add</code> 和 <code>commit</code> ），但是现在不想改动，想还原，而且只需要还原这个文件，其他的改动继续提交 <code>git checkout -- @/aaa/bbb/xxx.vue</code> 即恢复到修改之前的代码</p><h4 id="_6、切换镜像" tabindex="-1">6、切换镜像 <a class="header-anchor" href="#_6、切换镜像" aria-label="Permalink to &quot;6、切换镜像&quot;">​</a></h4><p>淘宝镜像： <code>npm install -g cnpm –registry=https://registry.npm.taobao.org</code></p><h4 id="_7、修改用户名" tabindex="-1">7、修改用户名 <a class="header-anchor" href="#_7、修改用户名" aria-label="Permalink to &quot;7、修改用户名&quot;">​</a></h4><p>git修改用户名 <code>git config --system --unset credential.helper</code><code>git config --global credential.helper store</code></p><h4 id="_8、clone失败" tabindex="-1">8、clone失败 <a class="header-anchor" href="#_8、clone失败" aria-label="Permalink to &quot;8、clone失败&quot;">​</a></h4><p><code>$ git clone https://github.com/PanJiaChen/vue-element-admin.git</code><code>Cloning into &#39;vue-element-admin&#39;...</code><code>fatal: unable to access &#39;https://github.com/PanJiaChen/vue-element-admin.git/&#39;:</code><code>OpenSSL SSL_connect: SSL_ERROR_SYSCALL in connection to github.com:443</code> 解决办法：将上面的 <code>https</code> 改为 <code>git</code> ,即 <code>git://github.com.......</code></p><h4 id="_9、autocrlf报错" tabindex="-1">9、autocrlf报错 <a class="header-anchor" href="#_9、autocrlf报错" aria-label="Permalink to &quot;9、autocrlf报错&quot;">​</a></h4><p><code>warning: LF will be replaced by CRLF in ---&gt;</code> 解决办法： <code>git config --global core.autocrlf false</code></p><h4 id="_10、删除远端分支报错" tabindex="-1">10、删除远端分支报错 <a class="header-anchor" href="#_10、删除远端分支报错" aria-label="Permalink to &quot;10、删除远端分支报错&quot;">​</a></h4><p><code>git push origin --delete username</code> 报错 删除远程分支报错 <code>remote refs do not exist</code> 解决办法： <code>git fetch -p origin</code></p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>主要介绍了Node、VsCode、Git的安装方法，以及VsCode常用插件和Git的一些操作方法和问题解决方案。环境和工具安装好之后，我们就可以开始项目的搭建和开发啦。</p>`,97),v=[f];function q(x,C,P,F,S,V){return i(),a("div",null,v)}const L=s(D,[["render",q]]);export{H as __pageData,L as default};
